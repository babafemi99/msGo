version: "3.9"

services:
  broker-service:
    build:
      context: broker-srv
      dockerfile: broker-srv.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1



  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "postgres://postgres:password@postgres:5432/users"
    depends_on:
      - postgres

  logger-service:
    build:
      context: ./logger-srv
      dockerfile: logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    build:
      context: ./listener-service
      dockerfile: listener-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailing-service:
    build:
      context: ./mailing-srv
      dockerfile: mailing-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_PORT: 1025
      FROM_NAME: Oreoluwa Babafemi
      FROM_ADDRESS: oreoluwababa@baba.com


  postgres:
    image: postgres:14.5-alpine
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users

    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data


  mongo:
    image: mongo:4.2.23-rc0-bionic
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admindb
      MONGO_INITDB_ROOT_PASSWORD: secret

    volumes:
      - ./db-data/mongo:/data/db

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/